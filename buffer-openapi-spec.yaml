swagger: '2.0'

info:
  title: Buffer OpenAPI Spec
  description: |
    OpenAPI Spec for Buffer, handcrafted by [Rodolfo Carvalho](http://rodolfocarvalho.net).

    **Note**: This is not an official spec. This is not endorsed by Buffer.
  version: 1.0.0
  license:
    name: MIT License
    url: https://github.com/rhcarvalho/buffer-openapi-spec/blob/master/LICENSE

externalDocs:
  description: Official Buffer API documentation
  url: https://buffer.com/developers/api

host: api.bufferapp.com
basePath: '/1'
schemes:
  - https

consumes:
  - application/x-www-form-urlencoded

produces:
  - application/json

tags:
  - name: auth
    description: Authentication with Buffer is the first step in building your app.
    externalDocs:
      url: https://buffer.com/developers/api/oauth
  - name: user
    description: A user represents a single Buffer user account.
    externalDocs:
      url: https://buffer.com/developers/api/user

securityDefinitions:
  Bearer:
    # header must be set to "Authorization: Bearer ${AccessToken}"
    type: apiKey
    in: header
    name: Authorization

security:
  - Bearer: []

paths:
  /oauth2/token.json:
    post:
      summary: Getting an Access Token
      security: []
      parameters:
        - in: formData
          name: client_id
          required: true
          type: string
        - in: formData
          name: client_secret
          required: true
          type: string
        - in: formData
          name: redirect_uri
          required: true
          type: string
        - in: formData
          name: code
          required: true
          type: string
        - in: formData
          name: grant_type
          required: true
          type: string
          enum: [authorization_code]
      responses:
        200:
          description: >
            If your request is successful we will return a long-lived access
            token which can be used to access the users account details for
            all further api requests.
          schema:
            type: object
            properties:
              access_token:
                type: string
      tags:
        - auth

  /user.json:
    get:
      summary: Returns a single user.
      responses:
        200:
          description: Returns a single user.
          schema:
            $ref: '#/definitions/User'
      tags:
        - user

  /user/deauthorize.json:
    post:
      summary: Deauthorize your client for the user.
      responses:
        200:
          description: Deauthorize your client for the user.
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
            example:
              success: true
              message: Access successfully revoked!
      tags:
        - user

definitions:
  User:
    type: object
    properties:
      # '_id' is the same as 'id'; ommited because it is unnecessary and because
      # it causes swagger-codegen to generate broken clients.
      #_id:
      #  type: string
      id:
        type: string
      activity_at:
        type: integer
        format: int32
      created_at:
        type: integer
        format: int32
      plan:
        type: string
      timezone:
        type: string
    example:
      _id: '4f0c0a06512f7ef214000000'
      activity_at: 1343654640
      created_at: 1326189062
      id: '4f0c0a06512f7ef214000000'
      plan: free
      timezone: Asia/Tel_Aviv
